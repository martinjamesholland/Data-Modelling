{
  "collections": [
    {
      "name": "party_relationships",
      "description": "Collection storing relationships between parties",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "required": ["party_relationship_id", "from_party_id", "to_party_id", "relationship_type", "start_date", "status", "created_at", "created_by", "updated_at", "updated_by"],
          "properties": {
            "party_relationship_id": {
              "bsonType": "string",
              "description": "Unique identifier for this relationship"
            },
            "from_party_id": {
              "bsonType": "string",
              "description": "ID of the source party"
            },
            "to_party_id": {
              "bsonType": "string",
              "description": "ID of the target party"
            },
            "relationship_type": {
              "bsonType": "string",
              "description": "Type of relationship between the parties"
            },
            "relationship_validity_period": {
              "bsonType": "string",
              "description": "The period for which this relationship is valid"
            },
            "start_date": {
              "bsonType": "date",
              "description": "Date when this relationship started"
            },
            "end_date": {
              "bsonType": "date",
              "description": "Date when this relationship ended"
            },
            "status": {
              "enum": ["Active", "Inactive", "Suspended", "Terminated"],
              "description": "Current status of the relationship"
            },
            "description": {
              "bsonType": "string",
              "description": "Description of the relationship"
            },
            "priority": {
              "bsonType": "int",
              "description": "Priority of this relationship"
            },
            "is_bidirectional": {
              "bsonType": "bool",
              "description": "Flag indicating if this relationship is bidirectional",
              "default": false
            },
            "customer_details": {
              "bsonType": "object",
              "description": "Customer relationship specific details",
              "properties": {
                "customer_type": {
                  "bsonType": "string",
                  "description": "Type of customer (e.g., Individual, Business, Government)"
                },
                "customer_category": {
                  "bsonType": "string",
                  "description": "Category of customer (e.g., Premium, Standard, Basic)"
                },
                "customer_risk_rating": {
                  "bsonType": "string",
                  "description": "Risk rating of the customer"
                },
                "account_manager_id": {
                  "bsonType": "string",
                  "description": "ID of the account manager for this customer"
                },
                "lifecycle_stage": {
                  "bsonType": "string",
                  "description": "Lifecycle stage of the customer (e.g., Prospect, Active, Dormant)"
                },
                "credit_limit": {
                  "bsonType": "double",
                  "description": "Credit limit for the customer"
                },
                "payment_terms": {
                  "bsonType": "string",
                  "description": "Payment terms for the customer"
                },
                "onboarding_date": {
                  "bsonType": "date",
                  "description": "Date when the customer was onboarded"
                },
                "kyc_status": {
                  "enum": ["Not Started", "In Progress", "Completed", "Failed", "Expired"],
                  "description": "Know Your Customer status"
                },
                "kyc_review_date": {
                  "bsonType": "date",
                  "description": "Date when KYC was last reviewed"
                }
              }
            },
            "created_at": {
              "bsonType": "date",
              "description": "Date and time when this record was created"
            },
            "created_by": {
              "bsonType": "string",
              "description": "User who created this record"
            },
            "updated_at": {
              "bsonType": "date",
              "description": "Date and time when this record was last updated"
            },
            "updated_by": {
              "bsonType": "string",
              "description": "User who last updated this record"
            },
            "deleted_at": {
              "bsonType": "date",
              "description": "Date and time when this record was marked as deleted"
            }
          }
        }
      },
      "indexes": [
        {
          "name": "party_relationship_id_idx",
          "key": { "party_relationship_id": 1 },
          "unique": true
        },
        {
          "name": "from_party_id_idx",
          "key": { "from_party_id": 1 }
        },
        {
          "name": "to_party_id_idx",
          "key": { "to_party_id": 1 }
        },
        {
          "name": "relationship_type_idx",
          "key": { "relationship_type": 1 }
        },
        {
          "name": "status_idx",
          "key": { "status": 1 }
        },
        {
          "name": "customer_details_idx",
          "key": { "customer_details.customer_type": 1 },
          "partialFilterExpression": { "relationship_type": "Customer" }
        }
      ]
    },
    {
      "name": "agreements",
      "description": "Collection storing agreements between parties",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "required": ["agreement_id", "agreement_name", "agreement_type", "effective_date", "status", "created_at", "created_by", "updated_at", "updated_by"],
          "properties": {
            "agreement_id": {
              "bsonType": "string",
              "description": "Unique identifier for this agreement"
            },
            "agreement_name": {
              "bsonType": "string",
              "description": "Name of the agreement"
            },
            "agreement_type": {
              "bsonType": "string",
              "description": "Type of agreement (e.g., Contract, SLA, MOU)"
            },
            "description": {
              "bsonType": "string",
              "description": "Description of the agreement"
            },
            "effective_date": {
              "bsonType": "date",
              "description": "Date from which the agreement is effective"
            },
            "expiry_date": {
              "bsonType": "date",
              "description": "Date when the agreement expires"
            },
            "renewal_date": {
              "bsonType": "date",
              "description": "Date when the agreement renews"
            },
            "status": {
              "enum": ["Draft", "Active", "Expired", "Terminated", "Renewed"],
              "description": "Current status of the agreement"
            },
            "terms": {
              "bsonType": "string",
              "description": "Terms of the agreement"
            },
            "agreement_document_url": {
              "bsonType": "string",
              "description": "URL to the agreement document"
            },
            "parties": {
              "bsonType": "array",
              "description": "Array of parties involved in this agreement",
              "items": {
                "bsonType": "object",
                "required": ["party_id", "role", "status"],
                "properties": {
                  "party_id": {
                    "bsonType": "string",
                    "description": "ID of the party"
                  },
                  "role": {
                    "bsonType": "string",
                    "description": "Role of the party in this agreement"
                  },
                  "signature_date": {
                    "bsonType": "date",
                    "description": "Date when the party signed the agreement"
                  },
                  "status": {
                    "enum": ["Draft", "Signed", "Revoked", "Expired"],
                    "description": "Status of the party in this agreement"
                  }
                }
              }
            },
            "created_at": {
              "bsonType": "date",
              "description": "Date and time when this record was created"
            },
            "created_by": {
              "bsonType": "string",
              "description": "User who created this record"
            },
            "updated_at": {
              "bsonType": "date",
              "description": "Date and time when this record was last updated"
            },
            "updated_by": {
              "bsonType": "string",
              "description": "User who last updated this record"
            },
            "deleted_at": {
              "bsonType": "date",
              "description": "Date and time when this record was marked as deleted"
            }
          }
        }
      },
      "indexes": [
        {
          "name": "agreement_id_idx",
          "key": { "agreement_id": 1 },
          "unique": true
        },
        {
          "name": "agreement_name_idx",
          "key": { "agreement_name": 1 }
        },
        {
          "name": "agreement_type_idx",
          "key": { "agreement_type": 1 }
        },
        {
          "name": "status_idx",
          "key": { "status": 1 }
        },
        {
          "name": "parties_idx",
          "key": { "parties.party_id": 1 }
        }
      ]
    }
  ]
} 