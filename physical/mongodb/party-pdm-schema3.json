{
  "collections": [
    {
      "name": "party_merge_history",
      "description": "Collection storing history of party merges in the MDM system",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "required": ["party_merge_id", "survivor_party_id", "merged_party_id", "merge_date", "status", "created_at", "created_by"],
          "properties": {
            "party_merge_id": {
              "bsonType": "string",
              "description": "Unique identifier for this merge record"
            },
            "survivor_party_id": {
              "bsonType": "string",
              "description": "ID of the surviving party"
            },
            "merged_party_id": {
              "bsonType": "string",
              "description": "ID of the merged party"
            },
            "merge_date": {
              "bsonType": "date",
              "description": "Date and time when the merge occurred"
            },
            "merge_reason": {
              "bsonType": "string",
              "description": "Reason for the merge"
            },
            "merge_score": {
              "bsonType": "double",
              "description": "Confidence score for the merge"
            },
            "merge_rule": {
              "bsonType": "string",
              "description": "Rule used for the merge"
            },
            "approved_by": {
              "bsonType": "string",
              "description": "User who approved the merge"
            },
            "approval_date": {
              "bsonType": "date",
              "description": "Date and time when the merge was approved"
            },
            "merged_record_json": {
              "bsonType": "object",
              "description": "JSON representation of the merged record"
            },
            "status": {
              "enum": ["Pending", "Approved", "Rejected", "Undone"],
              "description": "Current status of the merge"
            },
            "created_at": {
              "bsonType": "date",
              "description": "Date and time when this record was created"
            },
            "created_by": {
              "bsonType": "string",
              "description": "User who created this record"
            }
          }
        }
      },
      "indexes": [
        {
          "name": "party_merge_id_idx",
          "key": { "party_merge_id": 1 },
          "unique": true
        },
        {
          "name": "survivor_party_id_idx",
          "key": { "survivor_party_id": 1 }
        },
        {
          "name": "merged_party_id_idx",
          "key": { "merged_party_id": 1 }
        },
        {
          "name": "status_idx",
          "key": { "status": 1 }
        }
      ]
    },
    {
      "name": "party_match_rules",
      "description": "Collection storing rules for matching parties in the MDM system",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "required": ["match_rule_id", "rule_name", "rule_type", "rule_definition", "threshold", "priority", "is_active", "created_at", "created_by", "updated_at", "updated_by"],
          "properties": {
            "match_rule_id": {
              "bsonType": "string",
              "description": "Unique identifier for this match rule"
            },
            "rule_name": {
              "bsonType": "string",
              "description": "Name of the match rule"
            },
            "rule_description": {
              "bsonType": "string",
              "description": "Description of the match rule"
            },
            "rule_type": {
              "enum": ["Exact", "Fuzzy", "Deterministic", "Probabilistic", "Hybrid"],
              "description": "Type of match rule"
            },
            "rule_definition": {
              "bsonType": "object",
              "description": "Definition of the match rule in JSON format"
            },
            "threshold": {
              "bsonType": "double",
              "description": "Threshold for considering a match"
            },
            "priority": {
              "bsonType": "int",
              "description": "Priority of this rule in the matching hierarchy"
            },
            "party_type": {
              "enum": ["Person", "Organization", "Both"],
              "description": "Type of party this rule applies to"
            },
            "is_active": {
              "bsonType": "bool",
              "description": "Flag indicating if this rule is active",
              "default": true
            },
            "created_at": {
              "bsonType": "date",
              "description": "Date and time when this record was created"
            },
            "created_by": {
              "bsonType": "string",
              "description": "User who created this rule"
            },
            "updated_at": {
              "bsonType": "date",
              "description": "Date and time when this record was last updated"
            },
            "updated_by": {
              "bsonType": "string",
              "description": "User who last updated this rule"
            }
          }
        }
      },
      "indexes": [
        {
          "name": "match_rule_id_idx",
          "key": { "match_rule_id": 1 },
          "unique": true
        },
        {
          "name": "rule_name_idx",
          "key": { "rule_name": 1 },
          "unique": true
        },
        {
          "name": "priority_idx",
          "key": { "priority": 1 }
        },
        {
          "name": "is_active_idx",
          "key": { "is_active": 1 }
        }
      ]
    },
    {
      "name": "party_audit_logs",
      "description": "Collection storing audit logs for party data changes in the MDM system",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "required": ["audit_id", "party_id", "entity_name", "action", "action_date", "user_id"],
          "properties": {
            "audit_id": {
              "bsonType": "string",
              "description": "Unique identifier for this audit record"
            },
            "party_id": {
              "bsonType": "string",
              "description": "ID of the party being audited"
            },
            "entity_name": {
              "bsonType": "string",
              "description": "Name of the entity being audited"
            },
            "action": {
              "enum": ["Create", "Update", "Delete", "Merge", "Split", "Link", "Unlink"],
              "description": "Action performed on the entity"
            },
            "action_date": {
              "bsonType": "date",
              "description": "Date and time when the action was performed"
            },
            "user_id": {
              "bsonType": "string",
              "description": "ID of the user who performed the action"
            },
            "ip_address": {
              "bsonType": "string",
              "description": "IP address from which the action was performed"
            },
            "old_values": {
              "bsonType": "object",
              "description": "JSON representation of the old values"
            },
            "new_values": {
              "bsonType": "object",
              "description": "JSON representation of the new values"
            },
            "change_reason": {
              "bsonType": "string",
              "description": "Reason for the change"
            },
            "source_system": {
              "bsonType": "string",
              "description": "System from which the change originated"
            }
          }
        }
      },
      "indexes": [
        {
          "name": "audit_id_idx",
          "key": { "audit_id": 1 },
          "unique": true
        },
        {
          "name": "party_id_idx",
          "key": { "party_id": 1 }
        },
        {
          "name": "action_date_idx",
          "key": { "action_date": -1 }
        },
        {
          "name": "entity_action_idx",
          "key": { "entity_name": 1, "action": 1 }
        },
        {
          "name": "user_id_idx",
          "key": { "user_id": 1 }
        }
      ]
    },
    {
      "name": "party_data_quality",
      "description": "Collection storing data quality metrics for party data in the MDM system",
      "validator": {
        "$jsonSchema": {
          "bsonType": "object",
          "required": ["data_quality_id", "party_id", "assessment_date", "completeness_score", "accuracy_score", "consistency_score", "timeliness_score", "uniqueness_score", "overall_score", "created_at", "created_by"],
          "properties": {
            "data_quality_id": {
              "bsonType": "string",
              "description": "Unique identifier for this data quality record"
            },
            "party_id": {
              "bsonType": "string",
              "description": "ID of the party being assessed"
            },
            "assessment_date": {
              "bsonType": "date",
              "description": "Date and time when the assessment was performed"
            },
            "completeness_score": {
              "bsonType": "double",
              "description": "Score for data completeness (0-100)"
            },
            "accuracy_score": {
              "bsonType": "double",
              "description": "Score for data accuracy (0-100)"
            },
            "consistency_score": {
              "bsonType": "double",
              "description": "Score for data consistency (0-100)"
            },
            "timeliness_score": {
              "bsonType": "double",
              "description": "Score for data timeliness (0-100)"
            },
            "uniqueness_score": {
              "bsonType": "double",
              "description": "Score for data uniqueness (0-100)"
            },
            "overall_score": {
              "bsonType": "double",
              "description": "Overall data quality score (0-100)"
            },
            "issues_found": {
              "bsonType": "object",
              "description": "JSON representation of data quality issues found"
            },
            "improvement_suggestions": {
              "bsonType": "object",
              "description": "JSON representation of suggestions for improvement"
            },
            "created_at": {
              "bsonType": "date",
              "description": "Date and time when this record was created"
            },
            "created_by": {
              "bsonType": "string",
              "description": "User or system that created this record"
            }
          }
        }
      },
      "indexes": [
        {
          "name": "data_quality_id_idx",
          "key": { "data_quality_id": 1 },
          "unique": true
        },
        {
          "name": "party_id_idx",
          "key": { "party_id": 1 }
        },
        {
          "name": "assessment_date_idx",
          "key": { "assessment_date": -1 }
        },
        {
          "name": "overall_score_idx",
          "key": { "overall_score": -1 }
        }
      ]
    }
  ]
} 