  /relationships:
    get:
      summary: Get party relationships
      description: Retrieve a list of party relationships with optional filtering
      operationId: getRelationships
      tags:
        - Relationship
      parameters:
        - name: from_party_id
          in: query
          schema:
            type: string
          description: Filter by source party ID
        - name: to_party_id
          in: query
          schema:
            type: string
          description: Filter by target party ID
        - name: relationship_type
          in: query
          schema:
            type: string
          description: Filter by relationship type
        - name: status
          in: query
          schema:
            type: string
            enum: [Active, Inactive, Suspended, Terminated]
          description: Filter by relationship status
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of records per page
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PartyRelationshipListItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a new relationship
      description: Create a new relationship between parties
      operationId: createRelationship
      tags:
        - Relationship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PartyRelationshipCreate'
                - $ref: '#/components/schemas/CustomerRelationshipCreate'
      responses:
        '201':
          description: Relationship created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyRelationshipResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /relationships/{relationship_id}:
    get:
      summary: Get a relationship by ID
      description: Retrieve detailed information about a specific relationship
      operationId: getRelationshipById
      tags:
        - Relationship
      parameters:
        - name: relationship_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the relationship
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyRelationshipResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a relationship
      description: Update a relationship between parties
      operationId: updateRelationship
      tags:
        - Relationship
      parameters:
        - name: relationship_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the relationship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PartyRelationshipUpdate'
                - $ref: '#/components/schemas/CustomerRelationshipUpdate'
      responses:
        '200':
          description: Relationship updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyRelationshipResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a relationship
      description: Mark a relationship as deleted (soft delete)
      operationId: deleteRelationship
      tags:
        - Relationship
      parameters:
        - name: relationship_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the relationship
      responses:
        '204':
          description: Relationship deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError' 