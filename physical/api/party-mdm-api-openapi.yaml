openapi: 3.0.3
info:
  title: Party Master Data Management API
  description: API for managing party data (persons and organizations) in the MDM system
  version: 1.0.0
  contact:
    name: MDM Team
    email: mdm-team@example.com
servers:
  - url: 'https://api.example.com/mdm/v1'
    description: Production server
  - url: 'https://api-staging.example.com/mdm/v1'
    description: Staging server
  - url: 'https://api-dev.example.com/mdm/v1'
    description: Development server

tags:
  - name: Party
    description: Operations related to managing parties
  - name: Person
    description: Operations specific to person parties
  - name: Organization
    description: Operations specific to organization parties
  - name: Relationship
    description: Operations related to party relationships
  - name: Agreement
    description: Operations related to agreements
  - name: MDM
    description: Operations related to MDM-specific functionality

paths:
  /parties:
    get:
      summary: Get all parties
      description: Retrieve a list of parties with optional filtering
      operationId: getParties
      tags:
        - Party
      parameters:
        - name: party_type
          in: query
          schema:
            type: string
            enum: [Person, Organization]
          description: Filter by party type
        - name: status
          in: query
          schema:
            type: string
            enum: [Active, Inactive, Merged, Deleted]
          description: Filter by party status
        - name: is_golden_record
          in: query
          schema:
            type: boolean
          description: Filter by golden record status
        - name: name
          in: query
          schema:
            type: string
          description: Search by party name
        - name: data_source_system
          in: query
          schema:
            type: string
          description: Filter by source system
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of records per page
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PartyListItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a new party
      description: Create a new party record (person or organization)
      operationId: createParty
      tags:
        - Party
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PersonCreate'
                - $ref: '#/components/schemas/OrganizationCreate'
      responses:
        '201':
          description: Party created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  
  /parties/{party_id}:
    get:
      summary: Get a party by ID
      description: Retrieve detailed information about a specific party
      operationId: getPartyById
      tags:
        - Party
      parameters:
        - name: party_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the party
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a party
      description: Update a party record (person or organization)
      operationId: updateParty
      tags:
        - Party
      parameters:
        - name: party_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the party
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PersonUpdate'
                - $ref: '#/components/schemas/OrganizationUpdate'
      responses:
        '200':
          description: Party updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a party
      description: Mark a party as deleted (soft delete)
      operationId: deleteParty
      tags:
        - Party
      parameters:
        - name: party_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the party
      responses:
        '204':
          description: Party deleted successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError' 